apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-init
  namespace: mongodb
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
        - name: mongo-init
          image: mongo:7.0
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
          command:
            - bash
            - -c
            - |
              echo "üîÑ Waiting for mongo-0 to be ready..."
              until mongosh --host mongo-0.mongo.mongodb.svc.cluster.local --eval "db.adminCommand('ping')" &>/dev/null; do
                sleep 2
              done

              echo "üöÄ Initiating replica set (with retries)..."
              until mongosh --host mongo-0.mongo.mongodb.svc.cluster.local --eval 'try{ rs.initiate({_id:"rs0",members:[{_id:0,host:"mongo-0.mongo.mongodb.svc.cluster.local:27017"},{_id:1,host:"mongo-1.mongo.mongodb.svc.cluster.local:27017"},{_id:2,host:"mongo-2.mongo.mongodb.svc.cluster.local:27017"}]); }catch(e){ print(e); }' | grep -q '"ok" : 1'; do
                echo "‚è≥ Retry rs.initiate()..."
                sleep 2
              done

              echo "‚è≥ Waiting for PRIMARY..."
              until [ "$(mongosh --quiet --host mongo-0.mongo.mongodb.svc.cluster.local --eval 'rs.status().myState')" = "1" ]; do
                echo "‚è≥ Still waiting for PRIMARY..."
                sleep 2
              done

              echo "üîê Creating root admin user..."
              mongosh --host mongo-0.mongo.mongodb.svc.cluster.local --eval "db.getSiblingDB('admin').createUser({user:process.env.MONGO_INITDB_ROOT_USERNAME,pwd:process.env.MONGO_INITDB_ROOT_PASSWORD,roles:[{role:'root',db:'admin'}]})"
      restartPolicy: OnFailure
