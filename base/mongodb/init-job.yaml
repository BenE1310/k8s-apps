apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-init
  namespace: mongodb
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
        - name: mongo-init
          image: mongo:7.0
          command:
            - bash
            - -c
            - |
              echo "üîÑ Waiting for all MongoDB pods to be ready..."
              for host in mongo-0 mongo-1 mongo-2; do
                until mongosh --host $host.mongo.mongodb.svc.cluster.local --eval "db.adminCommand('ping')" &>/dev/null; do
                  echo "‚è≥ Waiting for $host to be ready..."
                  sleep 2
                done
              done

              echo "üîç Checking if replica set already exists..."
              REPLICA_OK=$(mongosh --quiet --host mongo-0.mongo.mongodb.svc.cluster.local --eval "try { rs.status().ok } catch (e) { 0 }")

              if [ "$REPLICA_OK" = "1" ]; then
                echo "‚úÖ Replica set already exists. Skipping initialization."
                exit 0
              fi

              echo "üöÄ Initiating replica set..."
              mongosh --host mongo-0.mongo.mongodb.svc.cluster.local --eval '
                rs.initiate({
                  _id: "rs0",
                  members: [
                    { _id: 0, host: "mongo-0.mongo.mongodb.svc.cluster.local:27017" },
                    { _id: 1, host: "mongo-1.mongo.mongodb.svc.cluster.local:27017" },
                    { _id: 2, host: "mongo-2.mongo.mongodb.svc.cluster.local:27017" }
                  ]
                })
              '
      restartPolicy: OnFailure
