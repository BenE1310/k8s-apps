apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-init
  namespace: mongodb
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: mongo-init
          image: mongo:7.0.5
          command:
            - bash
            - -c
            - |
              echo "Waiting for all MongoDB pods to be ready..."
              for pod in mongo-0 mongo-1 mongo-2; do
                until kubectl exec -n mongodb $pod -- mongosh --eval "db.adminCommand('ping')" >/dev/null 2>&1; do
                  echo "Waiting for $pod..."
                  sleep 2
                done
              done

              echo "Running replica set initiation on mongo-0"
              mongosh --host mongo-0.mongo.mongodb.svc.cluster.local --eval '
                try {
                  db = db.getSiblingDB("admin");

                  var status = rs.status();
                  if (!status.ok || status.codeName === "NotYetInitialized") {
                    rs.initiate({
                      _id: "rs0",
                      members: [
                        { _id: 0, host: "mongo-0.mongo.mongodb.svc.cluster.local:27017" },
                        { _id: 1, host: "mongo-1.mongo.mongodb.svc.cluster.local:27017" },
                        { _id: 2, host: "mongo-2.mongo.mongodb.svc.cluster.local:27017" }
                      ]
                    });
                    print("Replica set initiated.");
                  } else {
                    print("Replica set already initialized.");
                  }
                } catch (e) {
                  print("Error during replica set init: " + e);
                }
              '
