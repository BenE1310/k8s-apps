apiVersion: batch/v1
kind: Job
metadata:
  name: patch-mongo-pvs
  namespace: mongodb
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: pv-patch-sa
      containers:
        - name: patcher
          image: bitnami/kubectl:latest
          command:
            - sh
            - -c
            - |
              for pv in $(kubectl get pv -o jsonpath='{range .items[?(@.spec.claimRef.name=="mongo-pvc-mongo-0" || @.spec.claimRef.name=="mongo-pvc-mongo-1" || @.spec.claimRef.name=="mongo-pvc-mongo-2")]}{.metadata.name}{"\n"}{end}' | grep -v '^$'); do
                status=$(kubectl get pv $pv -o jsonpath='{.status.phase}')
                if [ "$status" = "Released" ]; then
                  echo "Patching PV: $pv"
                  kubectl patch pv $pv -p '{"spec":{"claimRef": null}}'
                fi
              done
      restartPolicy: OnFailure
